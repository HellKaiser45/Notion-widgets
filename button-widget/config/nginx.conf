user  nginx;
worker_processes  auto;

error_log  /var/log/nginx/error.log notice;
pid        /var/run/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

     access_log  /var/log/nginx/access.log main buffer=16k;  # Added buffer as recommended


    sendfile        on;
    tcp_nopush     on;
    tcp_nodelay     on;

    keepalive_timeout  65;
    keepalive_requests 1000;

    # Gzip configuration (optimized as per recommendations)
    gzip on;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/json
        application/xml
        application/x-javascript
        image/svg+xml;
    gzip_comp_level 6;  # Default compression level as recommended
    gzip_min_length 256;  # Only compress content above 256 bytes
    gzip_vary on;  # Sends Vary: Accept-Encoding header


server {
    listen 80 reuseport;
    server_name ${SITE_ORIGIN};
    root /var/www/html;
    index index.html;


    # Cache Control for Static Assets
    location ~* \.(js|css|png|jpg|jpeg|gif|svg|ico|woff|woff2)$ {
        expires 30d;
        add_header Cache-Control "public, immutable, max-age=2592000";
        access_log off;
        log_not_found off;
    }

    # Root redirect
    location / {

        try_files $uri $uri/ /index.html;
    }
    # API Location


    # UI Location
    location /ui/ {
        alias /var/www/html/ui/;
        try_files $uri $uri/ /ui/index.html;

        # HTML files cache control
        location ~* \.html$ {
            etag on;
        }
    }

    # Handle 404
    error_page 404 /ui/index.html;

    # Deny access to hidden files
    location ~ /\. {
        deny all;
        access_log off;
        log_not_found off;
    }

    add_header Content-Security-Policy "default-src 'self'; \
    script-src 'self' https://*.${SITE_ORIGIN}; \
    style-src 'self' https://*.${SITE_ORIGIN} https://fonts.googleapis.com; \
    img-src 'self' data: https://*.${SITE_ORIGIN} https://${SITE_ORIGIN}; \
    font-src 'self' https://fonts.gstatic.com; \
    frame-src 'self' https://*.${SITE_ORIGIN} https://*.notion.so; \
    connect-src 'self' https://*.${SITE_ORIGIN} wss://*.${SITE_ORIGIN}; \
    object-src 'none'; \
    base-uri 'self'; \
    form-action 'self'; \
    frame-ancestors 'self' https://*.notion.so; \
    media-src 'self'; \
    worker-src 'self' blob:; \
    manifest-src 'self' https://*.${SITE_ORIGIN} https://${SITE_ORIGIN};" always;

    # Additional security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
}
}
